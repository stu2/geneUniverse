% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchGenesSmth.R
\name{matchGenesSmth}
\alias{matchGenesSmth}
\title{Get a Matched Control Gene-Set}
\usage{
matchGenesSmth(x, goi, metric = "AveExpr", geneIDCol = "Gene.ID",
  ngenes = NULL, saturateAt = 0.95, mode = "sweep", n = 1,
  verbose = F, plotRes = F, highRankedGenes = NULL, forceMonot = F,
  flankWin = 10)
}
\arguments{
\item{x}{A data-frame having minimally 2 columns: a gene ID column and the column containing the metric that is confounded with gene discovery.}

\item{goi}{A vector containing the list of the genes of interest. These gene-names should be present in the column of \code{x} specified in \code{geneIDCol}.}

\item{metric}{The name of the column of \code{x} containing the metric that is confounded with gene discovery.}

\item{geneIDCol}{The name of the column of \code{x} containing the gene IDs.}

\item{ngenes}{The target number of genes that \code{matchGenesPW} will attempt to return. Over-rides \code{saturateAt}}

\item{saturateAt}{(default 0.95). This value of the observed density curve of GOIs will be adjusted to 1.0 in the target density curve for the control-gene set. Lower values return larger control gene lists. This value will be over-ridden if ngenes is specified.}

\item{mode}{Either 'sweep','probabilistic' or 'returnAll'. Genes are incorporated into the control set by sweeping from left to right on \code{metric}, otherwise each gene is selected purely probabilistically.}

\item{n}{If \code{mode} is set to 'probabilistic', setting n>1 allows for several iterations of probabilistic selection of control gene-sets. In this case, a logical matrix is returned.}

\item{verbose}{Output extra information, such as testing for the correlation between \code{metric} and inclusion in \code{selGenes}.}

\item{plotRes}{Output plots of the iterations and distributions of \code{metric} between test and control gene-sets, and discarded genes.}

\item{highRankedGenes}{A vector containing an expanded list of gene-names passing a less stringent significance threshold than \code{goi}, to model the distribution of \code{metric} for discoverable genes. The gene-names should be present in the column of \code{x} specified in \code{geneIDCol}. \code{highRankedGenes} can be used if there are not enough genes in \code{selGenes} to generate a smooth distribution of \code{metric}.}

\item{forceMonot}{The density of selected genes can never decrease as \code{metric} increases.}

\item{flankWin}{The number of flanking GOIs to the left and right of a GOI over which local density of GOIs is aggregated. Default (10) equates to a window size of 21 GOIs (up to 10 on left + central GOI + up to 10 on right) which may include any number of non-GOIs. This is similar to nominating kernel size for kernel smoothing.}
}
\value{
A character vector containing gene IDs of the generated control gene-set. If \code{mode} is set to 'probabilistic' and \code{n} is set to > 1, a logical matrix is returned, where rownames are GeneIDs and columns are iterations. If \code{mode} is set to 'returnAll', a named list of all outputs (including plots etc) is returned.
}
\description{
If the likelihood of a gene's inclusion in a gene-set is confounded with other 
variables like expression magnitude or variance, then in order to perform 
unbiased gene-set testing, a control gene-set is needed having a comparable 
distribution of the variable that is confounded with gene discoverability. 
\code{matchGenesSmth} generates a control gene-set whose distribution of some metric 
approximately matches a smoothed distribution for this metric in the gene-set of 
interest. The smoothed distribution can be forced to be monotonically increasing
prior to control gene selection.
}
\examples{
# Make biased multimodal dataset (first 300 are selected as DE and have higher expression)
set.seed(1)
df<-data.frame(Gene.ID=paste0('gene', 1:10000), 
               AveExpr=c(rgamma(100,shape = 3,scale = 0.5)+2,
                         rgamma(9200,shape = 2,scale = 1),
                         rgamma(700,shape = 2,scale = 0.5)+5), 
               diffReg=c(rep(TRUE,300),rep(FALSE,9700)))
controlSet <- matchGenes(df, df$Gene.ID[df$diffReg], metric="AveExpr", 
                        ngenes=5000,verbose = TRUE, plotRes = TRUE)

}
\author{
Stuart Archer
}
